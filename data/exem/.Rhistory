setwd("~/@python/neo-notebook/data/exem")
train.data.raw <- read.csv('machine-error01.csv', header = T)
train.data.raw <- read.csv('machine-error01.csv', header = T)
head(train.data.raw)
subset(train.data.raw, drop = c(1))
head(subset(train.data.raw, drop = c(1)))
train.data.raw <- read.csv('machine-error02.csv', header = T)
head(subset(train.data.raw, drop = c(1)))
head(subset(train.data.raw, drop = c(1)))
View(train.data.raw)
View(train.data.raw)
head(subset(train.data.raw, drop = c(2)))
head(subset(train.data.raw, drop = 2)
head(subset(train.data.raw, drop = 2))
head(subset(train.data.raw, drop = 2))
head(subset(train.data.raw, drop = c(2))
head(subset(train.data.raw, drop = c(2)))
head(subset(train.data.raw, drop = c(2)))
head(subset(train.data.raw, select = c(1, 3, 4, 5, 6, 7, 8))
head(subset(train.data.raw, select = c(1, 3, 4, 5, 6, 7, 8)))
head(subset(train.data.raw, select = c(1, 3, 4, 5, 6, 7, 8)))
train.data.raw <- head(subset(train.data.raw, select = c(1, 3, 4, 5, 6, 7, 8)))
source('~/@python/neo-notebook/exem/machine-analysis01.R')
train.data.raw <- head(subset(train.data.raw, select = c(1, 3, 4, 5, 6, 7, 8)))
train.data.raw <- read.csv('machine-error02.csv', header = T)
train.data.raw <- head(subset(train.data.raw, select = c(1, 3, 4, 5, 6, 7, 8)))
head(train.data.raw)
library(Amelia)
missmap(train.data.raw)
nrow(train.data.raw)
nrow(train.data.raw)
train.data.raw
train.data.raw <- read.csv('machine-error02.csv', header = T)
train.data.raw <- head(subset(train.data.raw, select = c(1, 3, 4, 5, 6, 7, 8)))
train.data.raw
train.data.raw <- read.csv('machine-error02.csv', header = T)
train.data.raw
train.data.raw <- subset(train.data.raw, select = c(1, 3, 4, 5, 6, 7, 8))
train.data.raw
head(train.data.raw)
data <- train.data.raw
nrow(data)
train <- data[1:14000]
test <- data[14001:14375]
train <- data[1:14000,]
test <- data[14001:14375,]
model(formula=error~., family=binomial(link='logit'), data=train)
glm(formula=error~., family=binomial(link='logit'), data=train)
model = glm(formula=error~., family=binomial(link='logit'), data=train)
model
summary(model)
fitted.results <- predict(model, newdata=test, type='response')
fitted.results <- ifelse(fitted.results > 0.5, 1, 0)
mean(fitted.results == test$error)
head(train.data.raw)
train.data.raw <- subset(train.data.raw, select = c(1, 3, 4, 5, 6, 7))
data <- train.data.raw
train <- data[1:14000,]
test <- data[14001:14375,]
model = glm(formula=error~., family=binomial(link='logit'), data=train)
fitted.results <- predict(model, newdata=test, type='response')
fitted.results <- ifelse(fitted.results > 0.5, 1, 0)
mean(fitted.results == test$error)
mean(fitted.results == test$error)
train.data.raw <- read.csv('machine-error02.csv', header = T)
train.data.raw <- subset(train.data.raw, select = c(1, 3, 4, 5, 6, 7, 8))
data <- train.data.raw
train <- data[1:14000,]
test <- data[14001:14375,]
model = glm(formula=error~., family=binomial(link='logit'), data=train)
fitted.results <- predict(model, newdata=test, type='response')
fitted.results <- ifelse(fitted.results > 0.5, 1, 0)
mean(fitted.results == test$error)
train.data.raw <- read.csv('machine-error01.csv', header = T)
train.data.raw
head(train.data.raw)
subset(train.data.raw, drop=2)
head(subset(train.data.raw, drop=2))
head(subset(train.data.raw, drop=c(2)))
head(subset(train.data.raw, select=-c(2)))
train.data.raw <- subset(train.data.raw, select = -c(2))
data <- train.data.raw
train <- data[1:14000,]
test <- data[14001:14375,]
model = glm(formula=error~., family=binomial(link='logit'), data=train)
fitted.results <- predict(model, newdata=test, type='response')
fitted.results <- ifelse(fitted.results > 0.5, 1, 0)
mean(fitted.results == test$error)
summary(model)
mean(fitted.results == test$error)
head(train.data.raw)
summary(train.data.raw)
mean(fitted.results == test$error)
summary(model)
missmap(train.data.raw)
sapply(train.data.raw, function(x) sum(is.na(x)))
mean(fitted.results == test$error)
mean(fitted.results == test$error)
mean(fitted.results == test$error)
table(data[14001:14375,]$error)
train <- data[1:13000,]
test <- data[13001:14375,]
model = glm(formula=error~., family=binomial(link='logit'), data=train)
fitted.results <- predict(model, newdata=test, type='response')
fitted.results <- ifelse(fitted.results > 0.5, 1, 0)
mean(fitted.results == test$error)
summary(model)
model
